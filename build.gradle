	/**
 * 
 * Thoughtfully generated by synapticloop gradle-project-init with the templar
 * templating language.
 */

buildscript {
	repositories {
		mavenLocal()
		maven {
			url "https://plugins.gradle.org/"
		}
	}

	dependencies {
		classpath 'synapticloop:copyrightr:1.3.0'
		classpath 'synapticloop:documentr:3.0.0'
	}
}

// list all of the plugins for this project
plugins {
	id 'java'
	id 'eclipse'
	id 'maven'
	id 'maven-publish'
	id 'com.gradle.plugin-publish' version '0.9.10'
	id 'co.riiid.gradle' version '0.4.2'
	id 'com.jfrog.bintray' version '1.8.4'

	id 'com.github.ben-manes.versions' version '0.17.0'

//	id 'synapticloop.documentr' version '3.0.0'
}

apply plugin: 'synapticloop.copyrightr'
apply plugin: 'synapticloop.documentr'

// textual information for this project
group = 'synapticloop'
archivesBaseName = 'copyrightr'
description = """A simple plugin to update the copyright years in a selection of files"""

version = '1.3.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8


// all of the repositories that this project will use
repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

// now for all of the dependencies
dependencies {
	compileOnly gradleApi()

	implementation 'commons-io:commons-io:2.6'
}

// we always want to fail on version conflict
configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
	}
}

copyrightr {
	// If set to true (default), this will only log what would have been 
	// changed, if set to false, this will over-write the files __without__
	// warning
	dryRun = false

	// This will be part of the regular expression that is searched for.
	// This helps to narrow down the lines that will be updated, useful
	// where there may be other companies that have copyright information
	copyrightHolder = "Synapticloop"

	// Which files are to be included, by default the included files are
	// - src/**/*.java, and
	// - src/**/*.groovy
	includes = [ 
	  "src/**/*.java",
	  "src/**/*.groovy"
	]

	// which files are to be excluded, by default there are no exclusions
	excludes = [ "**/*.class" ]

	// whether to only replace the first found instance, by default this
	// is set to true
	onlyReplaceFirst = true

	// the year separator to use
	yearSeparator = " - "

	// Whether to fail the build on any missing copyright notifications, by
	// default, this is set to false
	failOnMissing = false
}

github {
	owner = group
	repo = archivesBaseName
	if(System.getenv('GITHUB_TOKEN')) {
		token = System.getenv('GITHUB_TOKEN')
	}
	tagName = version
	name = version
	assets = [
		'build/libs/' + archivesBaseName + '-' + version + '-all.jar',
		'build/libs/' + archivesBaseName + '-' + version + '.jar'
	]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

publishing {
	publications {
		Synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId group
			artifactId archivesBaseName

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'implementation'
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')

	publications = [ 'Synapticloop' ]

	publish = true

	pkg {
		repo = 'maven'
		name = archivesBaseName
		userOrg = 'synapticloop'
		licenses = ['MIT']
		vcsUrl = 'https://github.com/synapticloop/copyrightr.git'
	}
}

pluginBundle {
	website = 'https://github.com/synapticloop/copyrightr'
	vcsUrl = 'https://github.com/synapticloop/copyrightr'
	description = """A simple plugin to update the copyright years in a selection of files"""
	tags = [ 'copyright', 'license', 'documentation' ]

	plugins {
		copyrightrPlugin {
			id = 'synapticloop.copyrightr'
			displayName = 'Synapticloop Gradle copyrightr plugin'
		}
	}
}

